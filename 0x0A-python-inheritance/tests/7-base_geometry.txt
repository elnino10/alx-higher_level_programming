The ``7-base_geometry`` module

Using ``BaseGeometry``

This is an example text file in reStructuredText format.  First import
``BaseGeometry`` from the ``7-base_geometry`` module:

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


>>> bg = BaseGeometry()
>>>

#name = string, value = integer
>>> bg.integer_validator("new", 2)
>>>

# name = string, value = None
>>> bg.integer_validator("name", None) #doctest: +ELLIPSIS
Traceback (most recent call last):
...
TypeError: name must be an integer


# name = string, value = string
>>> bg.integer_validator("name", "blue") #doctest: +ELLIPSIS
Traceback (most recent call last):
...
TypeError: name must be an integer


# name = string, value = negative
>>> bg.integer_validator("name", -1) #doctest: +ELLIPSIS
Traceback (most recent call last):
...
ValueError: name must be greater than 0



#name = string, value = 0
>>> bg.integer_validator("new", 0) #doctest: +ELLIPSIS
Traceback (most recent call last):
...
ValueError: new must be greater than 0


#name = string, value =  tuple
>>> bg.integer_validator("new", (2,)) #doctest: +ELLIPSIS
Traceback (most recent call last):
...
TypeError: new must be an integer


#name = empty, value = empty
>>> bg.integer_validator() #doctest: +ELLIPSIS
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'


#name = test empty for string argument
>>> bg.integer_validator("new") #doctest: +ELLIPSIS
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'


